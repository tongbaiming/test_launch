<launch>

  <arg name="simRate" default="nan"/>
  <!-- Enable simulation clock -->
  <param name="use_sim_time" type="bool" value="true" />
	<!-- use enable_loggin=true make problem -->
  <!-- <arg name="enable_logging" default="true"/> -->
  <arg name="enable_logging" default="false" />
  
  <arg name="enable_ground_truth" default="true"/>
  <arg name="log_file" default="erlecopter"/>
  <arg name="headless" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="world_name" default="$(find ardupilot_sitl_gazebo_plugin)/worlds/empty_world/empty_4.world"/>
  <env name="GAZEBO_MODEL_PATH" value="$(find drcsim_model_resources)/gazebo_models/environments:$(find ardupilot_sitl_gazebo_plugin)/meshes/meshes_sensors:$(find ardupilot_sitl_gazebo_plugin)/meshes/meshes_outdoor:$(find ardupilot_sitl_gazebo_plugin)/meshes/meshes_warehouse:$(env GAZEBO_MODEL_PATH)"/>
  <arg name="name" default="erlecopter"/>
  <arg name="debug" default="true"/>
  <arg name="verbose" default="true"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="false"/>   <!-- value unrelevant due to Arducopter plugin steps --> 
    <arg name="headless" value="$(arg headless)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="world_name" value="$(arg world_name)"/>
  </include>
  <arg name="mav_type_1" default="erlecopter" />
  <arg name="addon_type_1" default="guidance" />
  <arg name="addon_type_2" default="lidar" />
  <arg name="addon_type_3" default="guidance_lidar" />
  <arg name="$(arg addon_type_1)_code" value="1" />
  <arg name="$(arg addon_type_2)_code" value="2" />
  <arg name="$(arg addon_type_3)_code" value="3" />
 
	<arg name="mav_type_1_model_file" default="$(find ardupilot_sitl_gazebo_plugin_test_1)/urdf_test_4/erlecopter_test_3/erlecopter_base.xacro" />

	<arg name="party_1_mav_instance_1_x" default="1.0" /> <!-- [m], positive to the North -->
	<arg name="party_1_mav_instance_1_y" default="1.0" /> <!-- [m], negative to the East -->
	<arg name="party_1_mav_instance_1_z" default="0.10" /> <!-- [m], positive Up -->
	<arg name="party_1_mav_instance_1_roll" default="0" /> <!-- [rad] -->
	<arg name="party_1_mav_instance_1_pitch" default="0" /> <!-- [rad] -->
	<arg name="party_1_mav_instance_1_yaw" default="3.1415926" /> <!-- [rad], negative clockwise -->
	<arg name="party_1_mav_instance_2_x" default="0" />
	<arg name="party_1_mav_instance_2_y" default="0" />
	<arg name="party_1_mav_instance_2_z" default="0.10" />
	<arg name="party_1_mav_instance_2_roll" default="0" />
	<arg name="party_1_mav_instance_2_pitch" default="0" />
	<arg name="party_1_mav_instance_2_yaw" default="3.1415" />
	<arg name="party_2_mav_instance_1_x" default="0" />
	<arg name="party_2_mav_instance_1_y" default="0" />
	<arg name="party_2_mav_instance_1_z" default="0.10" />
	<arg name="party_2_mav_instance_1_roll" default="0" />
	<arg name="party_2_mav_instance_1_pitch" default="0" />
	<arg name="party_2_mav_instance_1_yaw" default="3.1415" />
	<arg name="party_2_mav_instance_2_x" default="0" />
	<arg name="party_2_mav_instance_2_y" default="0" />
	<arg name="party_2_mav_instance_2_z" default="0.10" />
	<arg name="party_2_mav_instance_2_roll" default="0" />
	<arg name="party_2_mav_instance_2_pitch" default="0" />
	<arg name="party_2_mav_instance_2_yaw" default="3.1415" />

	<group ns="party_1">
		
		<!-- send the robot XML to param server -->
		<param name="instance_1/$(arg mav_type_1)_$(arg addon_type_1)/robot_description" 
					command="$(find xacro)/xacro.py '$(arg mav_type_1_model_file)'
    							enable_logging:=$(arg enable_logging)
    							enable_ground_truth:=$(arg enable_ground_truth)
    							log_file:=$(arg log_file) addon_type:=$(arg addon_type_1) addon_code:=1 addon_number:=1 mav_instance_in_party:=1 party_instance:=1 instance_in_gazebo:=1"/>
    <!-- can also add remapping addon_file_directory:=$(arg addon_type_1_file_direcotry) addon_file_name:=$(arg addon_type_1_file_name) to command-->
    							
  	<node name="spawn_urdf_1" pkg="gazebo_ros" type="spawn_model" 
  				args="-param /party_1/instance_1/$(arg mav_type_1)_$(arg addon_type_1)/robot_description -urdf 
  				-x $(arg party_1_mav_instance_1_x) 
  				-y $(arg party_1_mav_instance_1_y) 
  				-z $(arg party_1_mav_instance_1_z) 
  				-model party_1/instance_1/$(arg mav_type_1)_$(arg addon_type_1)_1 "/>
  				
  		
  	<!--
  	<param name="instance_2/$(arg mav_type_1)_$(arg addon_type_3)/robot_description" 
					command="$(find xacro)/xacro.py '$(arg mav_type_1_model_file)'
    							enable_logging:=$(arg enable_logging)
    							enable_ground_truth:=$(arg enable_ground_truth)
    							log_file:=$(arg log_file) addon_type:=$(arg addon_type_3) addon_code:=3 addon_number:=1 mav_instance_in_party:=2 party_instance:=1 instance_in_gazebo:=2"/>
    							
    <node name="spawn_urdf_2" pkg="gazebo_ros" type="spawn_model" 
  				args="-param /party_1/instance_2/$(arg mav_type_1)_$(arg addon_type_3)/robot_description -urdf 
  				-x $(arg party_1_mav_instance_2_x) 
  				-y $(arg party_1_mav_instance_2_y) 
  				-z $(arg party_1_mav_instance_2_z) 
  				-model party_1/instance_2/$(arg mav_type_1)_$(arg addon_type_3)_1 " />
  				-->
	</group>
	
	<!--
  <group ns="part_2">
		<param name="robot_description" command="
    $(find xacro)/xacro.py '$(arg model)'
    enable_logging:=$(arg enable_logging)
    enable_ground_truth:=$(arg enable_ground_truth)
    log_file:=$(arg log_file) mav_type:=erlecopter_guidance"
  />
	</group>
	-->
    
</launch>
